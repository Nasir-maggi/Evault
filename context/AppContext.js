import { createContext, useState } from "react";
import Web3Modal from "web3modal";
import { ethers } from "ethers";

export const GovContext = createContext({});


import { useRouter } from "next/navigation";

const abi = {
  "_format": "hh-sol-artifact-1",
  "contractName": "GovToken",
  "sourceName": "contracts/Gov.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "fetchCertificateOf",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "department",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "imageURL",
              "type": "string"
            }
          ],
          "internalType": "struct GovToken.CertificateMetadata[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "department",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "imageURL",
          "type": "string"
        }
      ],
      "name": "mintCertificate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenMetadata",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "department",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "imageURL",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620025b7380380620025b7833981016040819052620000349162000256565b8151829082906200004d906000906020850190620000e3565b50805162000063906001906020840190620000e3565b505050620000806200007a6200008d60201b60201c565b62000091565b50506000600b55620002fd565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000f190620002c0565b90600052602060002090601f01602090048101928262000115576000855562000160565b82601f106200013057805160ff191683800117855562000160565b8280016001018555821562000160579182015b828111156200016057825182559160200191906001019062000143565b506200016e92915062000172565b5090565b5b808211156200016e576000815560010162000173565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001b157600080fd5b81516001600160401b0380821115620001ce57620001ce62000189565b604051601f8301601f19908116603f01168101908282118183101715620001f957620001f962000189565b816040528381526020925086838588010111156200021657600080fd5b600091505b838210156200023a57858201830151818301840152908201906200021b565b838211156200024c5760008385830101525b9695505050505050565b600080604083850312156200026a57600080fd5b82516001600160401b03808211156200028257600080fd5b62000290868387016200019f565b93506020850151915080821115620002a757600080fd5b50620002b6858286016200019f565b9150509250929050565b600181811c90821680620002d557607f821691505b60208210811415620002f757634e487b7160e01b600052602260045260246000fd5b50919050565b6122aa806200030d6000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063c87b56dd1161007c578063c87b56dd146102bd578063d082e381146102d0578063e0898996146102d9578063e985e9c5146102ec578063f2fde38b14610328578063f8aedb721461033b57600080fd5b806370a0823114610263578063715018a6146102765780638da5cb5b1461027e57806395d89b411461028f578063a22cb46514610297578063b88d4fde146102aa57600080fd5b806323b872dd1161011557806323b872dd146101e15780632f745c59146101f457806342842e0e146102075780634f6ccce71461021a5780636352211e1461022d5780636914db601461024057600080fd5b806301ffc9a71461015257806306fdde031461017a578063081812fc1461018f578063095ea7b3146101ba57806318160ddd146101cf575b600080fd5b610165610160366004611b99565b61035b565b60405190151581526020015b60405180910390f35b610182610386565b6040516101719190611c0e565b6101a261019d366004611c21565b610418565b6040516001600160a01b039091168152602001610171565b6101cd6101c8366004611c56565b61043f565b005b6008545b604051908152602001610171565b6101cd6101ef366004611c80565b61055a565b6101d3610202366004611c56565b61058b565b6101cd610215366004611c80565b610621565b6101d3610228366004611c21565b61063c565b6101a261023b366004611c21565b6106cf565b61025361024e366004611c21565b61072f565b6040516101719493929190611cbc565b6101d3610271366004611d14565b610977565b6101cd6109fd565b600a546001600160a01b03166101a2565b610182610a11565b6101cd6102a5366004611d2f565b610a20565b6101cd6102b8366004611df7565b610a2f565b6101826102cb366004611c21565b610a67565b6101d3600b5481565b6101cd6102e7366004611e93565b610adb565b6101656102fa366004611f51565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101cd610336366004611d14565b610ba1565b61034e610349366004611d14565b610c1a565b6040516101719190611f84565b60006001600160e01b0319821663780e9d6360e01b1480610380575061038082610f5b565b92915050565b60606000805461039590612040565b80601f01602080910402602001604051908101604052809291908181526020018280546103c190612040565b801561040e5780601f106103e35761010080835404028352916020019161040e565b820191906000526020600020905b8154815290600101906020018083116103f157829003601f168201915b5050505050905090565b600061042382610fab565b506000908152600460205260409020546001600160a01b031690565b600061044a826106cf565b9050806001600160a01b0316836001600160a01b031614156104bd5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104d957506104d981336102fa565b61054b5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016104b4565b610555838361100a565b505050565b6105643382611078565b6105805760405162461bcd60e51b81526004016104b49061207b565b6105558383836110f7565b600061059683610977565b82106105f85760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016104b4565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61055583838360405180602001604052806000815250610a2f565b600061064760085490565b82106106aa5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016104b4565b600882815481106106bd576106bd6120c8565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806103805760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104b4565b600c6020526000908152604090208054819061074a90612040565b80601f016020809104026020016040519081016040528092919081815260200182805461077690612040565b80156107c35780601f10610798576101008083540402835291602001916107c3565b820191906000526020600020905b8154815290600101906020018083116107a657829003601f168201915b5050505050908060010180546107d890612040565b80601f016020809104026020016040519081016040528092919081815260200182805461080490612040565b80156108515780601f1061082657610100808354040283529160200191610851565b820191906000526020600020905b81548152906001019060200180831161083457829003601f168201915b50505050509080600201805461086690612040565b80601f016020809104026020016040519081016040528092919081815260200182805461089290612040565b80156108df5780601f106108b4576101008083540402835291602001916108df565b820191906000526020600020905b8154815290600101906020018083116108c257829003601f168201915b5050505050908060030180546108f490612040565b80601f016020809104026020016040519081016040528092919081815260200182805461092090612040565b801561096d5780601f106109425761010080835404028352916020019161096d565b820191906000526020600020905b81548152906001019060200180831161095057829003601f168201915b5050505050905084565b60006001600160a01b0382166109e15760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016104b4565b506001600160a01b031660009081526003602052604090205490565b610a05611268565b610a0f60006112c2565b565b60606001805461039590612040565b610a2b338383611314565b5050565b610a393383611078565b610a555760405162461bcd60e51b81526004016104b49061207b565b610a61848484846113e3565b50505050565b6060610a7282610fab565b6000610a8960408051602081019091526000815290565b90506000815111610aa95760405180602001604052806000815250610ad4565b80610ab384611416565b604051602001610ac49291906120de565b6040516020818303038152906040525b9392505050565b610ae3611268565b600b54610af086826114ab565b604080516080810182528681526020808201879052818301869052606082018590526000848152600c8252929092208151805192939192610b349284920190611aea565b506020828101518051610b4d9260018501920190611aea565b5060408201518051610b69916002840191602090910190611aea565b5060608201518051610b85916003840191602090910190611aea565b5050600b54610b9691506001611644565b600b55505050505050565b610ba9611268565b6001600160a01b038116610c0e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b4565b610c17816112c2565b50565b60606000610c2783610977565b905060008167ffffffffffffffff811115610c4457610c44611d6b565b604051908082528060200260200182016040528015610ca057816020015b610c8d6040518060800160405280606081526020016060815260200160608152602001606081525090565b815260200190600190039081610c625790505b50905060005b82811015610f53576000610cba868361058b565b9050600c6000828152602001908152602001600020604051806080016040529081600082018054610cea90612040565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1690612040565b8015610d635780601f10610d3857610100808354040283529160200191610d63565b820191906000526020600020905b815481529060010190602001808311610d4657829003601f168201915b50505050508152602001600182018054610d7c90612040565b80601f0160208091040260200160405190810160405280929190818152602001828054610da890612040565b8015610df55780601f10610dca57610100808354040283529160200191610df5565b820191906000526020600020905b815481529060010190602001808311610dd857829003601f168201915b50505050508152602001600282018054610e0e90612040565b80601f0160208091040260200160405190810160405280929190818152602001828054610e3a90612040565b8015610e875780601f10610e5c57610100808354040283529160200191610e87565b820191906000526020600020905b815481529060010190602001808311610e6a57829003601f168201915b50505050508152602001600382018054610ea090612040565b80601f0160208091040260200160405190810160405280929190818152602001828054610ecc90612040565b8015610f195780601f10610eee57610100808354040283529160200191610f19565b820191906000526020600020905b815481529060010190602001808311610efc57829003601f168201915b505050505081525050838381518110610f3457610f346120c8565b6020026020010181905250508080610f4b90612123565b915050610ca6565b509392505050565b60006001600160e01b031982166380ac58cd60e01b1480610f8c57506001600160e01b03198216635b5e139f60e01b145b8061038057506301ffc9a760e01b6001600160e01b0319831614610380565b6000818152600260205260409020546001600160a01b0316610c175760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104b4565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061103f826106cf565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080611084836106cf565b9050806001600160a01b0316846001600160a01b031614806110cb57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806110ef5750836001600160a01b03166110e484610418565b6001600160a01b0316145b949350505050565b826001600160a01b031661110a826106cf565b6001600160a01b0316146111305760405162461bcd60e51b81526004016104b49061213e565b6001600160a01b0382166111925760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104b4565b61119f8383836001611650565b826001600160a01b03166111b2826106cf565b6001600160a01b0316146111d85760405162461bcd60e51b81526004016104b49061213e565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a546001600160a01b03163314610a0f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b4565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156113765760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104b4565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6113ee8484846110f7565b6113fa84848484611784565b610a615760405162461bcd60e51b81526004016104b490612183565b6060600061142383611882565b600101905060008167ffffffffffffffff81111561144357611443611d6b565b6040519080825280601f01601f19166020018201604052801561146d576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846114a657610f53565b611477565b6001600160a01b0382166115015760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104b4565b6000818152600260205260409020546001600160a01b0316156115665760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104b4565b611574600083836001611650565b6000818152600260205260409020546001600160a01b0316156115d95760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104b4565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000610ad482846121d5565b60018111156116bf5760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b60648201526084016104b4565b816001600160a01b03851661171b5761171681600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61173e565b836001600160a01b0316856001600160a01b03161461173e5761173e858261195a565b6001600160a01b03841661175a57611755816119f7565b61177d565b846001600160a01b0316846001600160a01b03161461177d5761177d8482611aa6565b5050505050565b60006001600160a01b0384163b1561187757604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906117c89033908990889088906004016121ed565b6020604051808303816000875af1925050508015611803575060408051601f3d908101601f191682019092526118009181019061222a565b60015b61185d573d808015611831576040519150601f19603f3d011682016040523d82523d6000602084013e611836565b606091505b5080516118555760405162461bcd60e51b81526004016104b490612183565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506110ef565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106118c15772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106118ed576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061190b57662386f26fc10000830492506010015b6305f5e1008310611923576305f5e100830492506008015b612710831061193757612710830492506004015b60648310611949576064830492506002015b600a83106103805760010192915050565b6000600161196784610977565b6119719190612247565b6000838152600760205260409020549091508082146119c4576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611a0990600190612247565b60008381526009602052604081205460088054939450909284908110611a3157611a316120c8565b906000526020600020015490508060088381548110611a5257611a526120c8565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611a8a57611a8a61225e565b6001900381819060005260206000200160009055905550505050565b6000611ab183610977565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054611af690612040565b90600052602060002090601f016020900481019282611b185760008555611b5e565b82601f10611b3157805160ff1916838001178555611b5e565b82800160010185558215611b5e579182015b82811115611b5e578251825591602001919060010190611b43565b50611b6a929150611b6e565b5090565b5b80821115611b6a5760008155600101611b6f565b6001600160e01b031981168114610c1757600080fd5b600060208284031215611bab57600080fd5b8135610ad481611b83565b60005b83811015611bd1578181015183820152602001611bb9565b83811115610a615750506000910152565b60008151808452611bfa816020860160208601611bb6565b601f01601f19169290920160200192915050565b602081526000610ad46020830184611be2565b600060208284031215611c3357600080fd5b5035919050565b80356001600160a01b0381168114611c5157600080fd5b919050565b60008060408385031215611c6957600080fd5b611c7283611c3a565b946020939093013593505050565b600080600060608486031215611c9557600080fd5b611c9e84611c3a565b9250611cac60208501611c3a565b9150604084013590509250925092565b608081526000611ccf6080830187611be2565b8281036020840152611ce18187611be2565b90508281036040840152611cf58186611be2565b90508281036060840152611d098185611be2565b979650505050505050565b600060208284031215611d2657600080fd5b610ad482611c3a565b60008060408385031215611d4257600080fd5b611d4b83611c3a565b915060208301358015158114611d6057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611d9c57611d9c611d6b565b604051601f8501601f19908116603f01168101908282118183101715611dc457611dc4611d6b565b81604052809350858152868686011115611ddd57600080fd5b858560208301376000602087830101525050509392505050565b60008060008060808587031215611e0d57600080fd5b611e1685611c3a565b9350611e2460208601611c3a565b925060408501359150606085013567ffffffffffffffff811115611e4757600080fd5b8501601f81018713611e5857600080fd5b611e6787823560208401611d81565b91505092959194509250565b600082601f830112611e8457600080fd5b610ad483833560208501611d81565b600080600080600060a08688031215611eab57600080fd5b611eb486611c3a565b9450602086013567ffffffffffffffff80821115611ed157600080fd5b611edd89838a01611e73565b95506040880135915080821115611ef357600080fd5b611eff89838a01611e73565b94506060880135915080821115611f1557600080fd5b611f2189838a01611e73565b93506080880135915080821115611f3757600080fd5b50611f4488828901611e73565b9150509295509295909350565b60008060408385031215611f6457600080fd5b611f6d83611c3a565b9150611f7b60208401611c3a565b90509250929050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561203257603f19898403018552815160808151818652611fd182870182611be2565b915050888201518582038a870152611fe98282611be2565b91505087820151858203898701526120018282611be2565b9150506060808301519250858203818701525061201e8183611be2565b968901969450505090860190600101611fab565b509098975050505050505050565b600181811c9082168061205457607f821691505b6020821081141561207557634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600083516120f0818460208801611bb6565b835190830190612104818360208801611bb6565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156121375761213761210d565b5060010190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600082198211156121e8576121e861210d565b500190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061222090830184611be2565b9695505050505050565b60006020828403121561223c57600080fd5b8151610ad481611b83565b6000828210156122595761225961210d565b500390565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220c59d43f6e0353131cd73d89bff265a6bdf51d7a970b9c01e1bc033d4c03b576564736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063c87b56dd1161007c578063c87b56dd146102bd578063d082e381146102d0578063e0898996146102d9578063e985e9c5146102ec578063f2fde38b14610328578063f8aedb721461033b57600080fd5b806370a0823114610263578063715018a6146102765780638da5cb5b1461027e57806395d89b411461028f578063a22cb46514610297578063b88d4fde146102aa57600080fd5b806323b872dd1161011557806323b872dd146101e15780632f745c59146101f457806342842e0e146102075780634f6ccce71461021a5780636352211e1461022d5780636914db601461024057600080fd5b806301ffc9a71461015257806306fdde031461017a578063081812fc1461018f578063095ea7b3146101ba57806318160ddd146101cf575b600080fd5b610165610160366004611b99565b61035b565b60405190151581526020015b60405180910390f35b610182610386565b6040516101719190611c0e565b6101a261019d366004611c21565b610418565b6040516001600160a01b039091168152602001610171565b6101cd6101c8366004611c56565b61043f565b005b6008545b604051908152602001610171565b6101cd6101ef366004611c80565b61055a565b6101d3610202366004611c56565b61058b565b6101cd610215366004611c80565b610621565b6101d3610228366004611c21565b61063c565b6101a261023b366004611c21565b6106cf565b61025361024e366004611c21565b61072f565b6040516101719493929190611cbc565b6101d3610271366004611d14565b610977565b6101cd6109fd565b600a546001600160a01b03166101a2565b610182610a11565b6101cd6102a5366004611d2f565b610a20565b6101cd6102b8366004611df7565b610a2f565b6101826102cb366004611c21565b610a67565b6101d3600b5481565b6101cd6102e7366004611e93565b610adb565b6101656102fa366004611f51565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101cd610336366004611d14565b610ba1565b61034e610349366004611d14565b610c1a565b6040516101719190611f84565b60006001600160e01b0319821663780e9d6360e01b1480610380575061038082610f5b565b92915050565b60606000805461039590612040565b80601f01602080910402602001604051908101604052809291908181526020018280546103c190612040565b801561040e5780601f106103e35761010080835404028352916020019161040e565b820191906000526020600020905b8154815290600101906020018083116103f157829003601f168201915b5050505050905090565b600061042382610fab565b506000908152600460205260409020546001600160a01b031690565b600061044a826106cf565b9050806001600160a01b0316836001600160a01b031614156104bd5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806104d957506104d981336102fa565b61054b5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016104b4565b610555838361100a565b505050565b6105643382611078565b6105805760405162461bcd60e51b81526004016104b49061207b565b6105558383836110f7565b600061059683610977565b82106105f85760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016104b4565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61055583838360405180602001604052806000815250610a2f565b600061064760085490565b82106106aa5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016104b4565b600882815481106106bd576106bd6120c8565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806103805760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104b4565b600c6020526000908152604090208054819061074a90612040565b80601f016020809104026020016040519081016040528092919081815260200182805461077690612040565b80156107c35780601f10610798576101008083540402835291602001916107c3565b820191906000526020600020905b8154815290600101906020018083116107a657829003601f168201915b5050505050908060010180546107d890612040565b80601f016020809104026020016040519081016040528092919081815260200182805461080490612040565b80156108515780601f1061082657610100808354040283529160200191610851565b820191906000526020600020905b81548152906001019060200180831161083457829003601f168201915b50505050509080600201805461086690612040565b80601f016020809104026020016040519081016040528092919081815260200182805461089290612040565b80156108df5780601f106108b4576101008083540402835291602001916108df565b820191906000526020600020905b8154815290600101906020018083116108c257829003601f168201915b5050505050908060030180546108f490612040565b80601f016020809104026020016040519081016040528092919081815260200182805461092090612040565b801561096d5780601f106109425761010080835404028352916020019161096d565b820191906000526020600020905b81548152906001019060200180831161095057829003601f168201915b5050505050905084565b60006001600160a01b0382166109e15760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016104b4565b506001600160a01b031660009081526003602052604090205490565b610a05611268565b610a0f60006112c2565b565b60606001805461039590612040565b610a2b338383611314565b5050565b610a393383611078565b610a555760405162461bcd60e51b81526004016104b49061207b565b610a61848484846113e3565b50505050565b6060610a7282610fab565b6000610a8960408051602081019091526000815290565b90506000815111610aa95760405180602001604052806000815250610ad4565b80610ab384611416565b604051602001610ac49291906120de565b6040516020818303038152906040525b9392505050565b610ae3611268565b600b54610af086826114ab565b604080516080810182528681526020808201879052818301869052606082018590526000848152600c8252929092208151805192939192610b349284920190611aea565b506020828101518051610b4d9260018501920190611aea565b5060408201518051610b69916002840191602090910190611aea565b5060608201518051610b85916003840191602090910190611aea565b5050600b54610b9691506001611644565b600b55505050505050565b610ba9611268565b6001600160a01b038116610c0e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b4565b610c17816112c2565b50565b60606000610c2783610977565b905060008167ffffffffffffffff811115610c4457610c44611d6b565b604051908082528060200260200182016040528015610ca057816020015b610c8d6040518060800160405280606081526020016060815260200160608152602001606081525090565b815260200190600190039081610c625790505b50905060005b82811015610f53576000610cba868361058b565b9050600c6000828152602001908152602001600020604051806080016040529081600082018054610cea90612040565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1690612040565b8015610d635780601f10610d3857610100808354040283529160200191610d63565b820191906000526020600020905b815481529060010190602001808311610d4657829003601f168201915b50505050508152602001600182018054610d7c90612040565b80601f0160208091040260200160405190810160405280929190818152602001828054610da890612040565b8015610df55780601f10610dca57610100808354040283529160200191610df5565b820191906000526020600020905b815481529060010190602001808311610dd857829003601f168201915b50505050508152602001600282018054610e0e90612040565b80601f0160208091040260200160405190810160405280929190818152602001828054610e3a90612040565b8015610e875780601f10610e5c57610100808354040283529160200191610e87565b820191906000526020600020905b815481529060010190602001808311610e6a57829003601f168201915b50505050508152602001600382018054610ea090612040565b80601f0160208091040260200160405190810160405280929190818152602001828054610ecc90612040565b8015610f195780601f10610eee57610100808354040283529160200191610f19565b820191906000526020600020905b815481529060010190602001808311610efc57829003601f168201915b505050505081525050838381518110610f3457610f346120c8565b6020026020010181905250508080610f4b90612123565b915050610ca6565b509392505050565b60006001600160e01b031982166380ac58cd60e01b1480610f8c57506001600160e01b03198216635b5e139f60e01b145b8061038057506301ffc9a760e01b6001600160e01b0319831614610380565b6000818152600260205260409020546001600160a01b0316610c175760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016104b4565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061103f826106cf565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080611084836106cf565b9050806001600160a01b0316846001600160a01b031614806110cb57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806110ef5750836001600160a01b03166110e484610418565b6001600160a01b0316145b949350505050565b826001600160a01b031661110a826106cf565b6001600160a01b0316146111305760405162461bcd60e51b81526004016104b49061213e565b6001600160a01b0382166111925760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104b4565b61119f8383836001611650565b826001600160a01b03166111b2826106cf565b6001600160a01b0316146111d85760405162461bcd60e51b81526004016104b49061213e565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a546001600160a01b03163314610a0f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104b4565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156113765760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104b4565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6113ee8484846110f7565b6113fa84848484611784565b610a615760405162461bcd60e51b81526004016104b490612183565b6060600061142383611882565b600101905060008167ffffffffffffffff81111561144357611443611d6b565b6040519080825280601f01601f19166020018201604052801561146d576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846114a657610f53565b611477565b6001600160a01b0382166115015760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104b4565b6000818152600260205260409020546001600160a01b0316156115665760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104b4565b611574600083836001611650565b6000818152600260205260409020546001600160a01b0316156115d95760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104b4565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000610ad482846121d5565b60018111156116bf5760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b60648201526084016104b4565b816001600160a01b03851661171b5761171681600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61173e565b836001600160a01b0316856001600160a01b03161461173e5761173e858261195a565b6001600160a01b03841661175a57611755816119f7565b61177d565b846001600160a01b0316846001600160a01b03161461177d5761177d8482611aa6565b5050505050565b60006001600160a01b0384163b1561187757604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906117c89033908990889088906004016121ed565b6020604051808303816000875af1925050508015611803575060408051601f3d908101601f191682019092526118009181019061222a565b60015b61185d573d808015611831576040519150601f19603f3d011682016040523d82523d6000602084013e611836565b606091505b5080516118555760405162461bcd60e51b81526004016104b490612183565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506110ef565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106118c15772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106118ed576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061190b57662386f26fc10000830492506010015b6305f5e1008310611923576305f5e100830492506008015b612710831061193757612710830492506004015b60648310611949576064830492506002015b600a83106103805760010192915050565b6000600161196784610977565b6119719190612247565b6000838152600760205260409020549091508082146119c4576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611a0990600190612247565b60008381526009602052604081205460088054939450909284908110611a3157611a316120c8565b906000526020600020015490508060088381548110611a5257611a526120c8565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611a8a57611a8a61225e565b6001900381819060005260206000200160009055905550505050565b6000611ab183610977565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054611af690612040565b90600052602060002090601f016020900481019282611b185760008555611b5e565b82601f10611b3157805160ff1916838001178555611b5e565b82800160010185558215611b5e579182015b82811115611b5e578251825591602001919060010190611b43565b50611b6a929150611b6e565b5090565b5b80821115611b6a5760008155600101611b6f565b6001600160e01b031981168114610c1757600080fd5b600060208284031215611bab57600080fd5b8135610ad481611b83565b60005b83811015611bd1578181015183820152602001611bb9565b83811115610a615750506000910152565b60008151808452611bfa816020860160208601611bb6565b601f01601f19169290920160200192915050565b602081526000610ad46020830184611be2565b600060208284031215611c3357600080fd5b5035919050565b80356001600160a01b0381168114611c5157600080fd5b919050565b60008060408385031215611c6957600080fd5b611c7283611c3a565b946020939093013593505050565b600080600060608486031215611c9557600080fd5b611c9e84611c3a565b9250611cac60208501611c3a565b9150604084013590509250925092565b608081526000611ccf6080830187611be2565b8281036020840152611ce18187611be2565b90508281036040840152611cf58186611be2565b90508281036060840152611d098185611be2565b979650505050505050565b600060208284031215611d2657600080fd5b610ad482611c3a565b60008060408385031215611d4257600080fd5b611d4b83611c3a565b915060208301358015158114611d6057600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611d9c57611d9c611d6b565b604051601f8501601f19908116603f01168101908282118183101715611dc457611dc4611d6b565b81604052809350858152868686011115611ddd57600080fd5b858560208301376000602087830101525050509392505050565b60008060008060808587031215611e0d57600080fd5b611e1685611c3a565b9350611e2460208601611c3a565b925060408501359150606085013567ffffffffffffffff811115611e4757600080fd5b8501601f81018713611e5857600080fd5b611e6787823560208401611d81565b91505092959194509250565b600082601f830112611e8457600080fd5b610ad483833560208501611d81565b600080600080600060a08688031215611eab57600080fd5b611eb486611c3a565b9450602086013567ffffffffffffffff80821115611ed157600080fd5b611edd89838a01611e73565b95506040880135915080821115611ef357600080fd5b611eff89838a01611e73565b94506060880135915080821115611f1557600080fd5b611f2189838a01611e73565b93506080880135915080821115611f3757600080fd5b50611f4488828901611e73565b9150509295509295909350565b60008060408385031215611f6457600080fd5b611f6d83611c3a565b9150611f7b60208401611c3a565b90509250929050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561203257603f19898403018552815160808151818652611fd182870182611be2565b915050888201518582038a870152611fe98282611be2565b91505087820151858203898701526120018282611be2565b9150506060808301519250858203818701525061201e8183611be2565b968901969450505090860190600101611fab565b509098975050505050505050565b600181811c9082168061205457607f821691505b6020821081141561207557634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600083516120f0818460208801611bb6565b835190830190612104818360208801611bb6565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156121375761213761210d565b5060010190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600082198211156121e8576121e861210d565b500190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061222090830184611be2565b9695505050505050565b60006020828403121561223c57600080fd5b8151610ad481611b83565b6000828210156122595761225961210d565b500390565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220c59d43f6e0353131cd73d89bff265a6bdf51d7a970b9c01e1bc033d4c03b576564736f6c634300080b0033",
  "linkReferences": {},
  "deployedLinkReferences": {}
}



const fetchContract = async (signerOrProvider) => {

  const web3Modal = new Web3Modal();
  const connection = await web3Modal.connect();
  const provider = new ethers.providers.Web3Provider(connection);
  const { chainId } = await provider.getNetwork();
  const ftContract = new ethers.Contract(
    "0x2841ea1ed48a488b6E5c1c578154Ea2e2cB59fEE",
    abi.abi,
    signerOrProvider
  );
  return ftContract;
};



const connectingWithSmartContract = async () => {
  try {
    const web3Modal = new Web3Modal();
    const connection = await web3Modal.connect();
    const provider = new ethers.providers.Web3Provider(connection);
    const signer = provider.getSigner();

    const contract = fetchContract(signer);
    return contract;
  } catch (error) {
    console.log(
      `Ran into an error while connecting to Smart Contract ${error}`
    );
  }
};




export function AppContext({ children }) {

  const [success, setSuccess] = useState("");
  const [openSuccess, setOpenSuccess] = useState(false);
  const [error, setError] = useState("");
  const [openError, setOpenError] = useState(false);
  const [currentAccount, setCurrentAccount] = useState("");
  const router = useRouter();
  const [imgURL,setImgURL]=useState();
  const ConnectToWallet = async () => {
    try {
      if (!window.ethereum)
        return setOpenError(true), setError("Please, Install a Wallet");

      const accounts = await window.ethereum.request({
        method: "eth_accounts",
      });

      if (accounts.length) {
        setCurrentAccount(accounts[0]);
      } else {
        setError("Please connect to your account");
        setOpenError(true);
      }
    } catch (error) {
      setError("Wallet is not connected");
      setOpenError(true);
    }
  };

  const checkWalletNetwork = async () => {
    const web3Modal = new Web3Modal();
    const connection = await web3Modal.connect();
    const provider = new ethers.providers.Web3Provider(connection);

    const { chainId } = await provider.getNetwork();

    if (chainId === 31337 || chainId === 80001 || chainId === 5 || chainId === 1337) {
      return true;
    } else {
      return false;
    }
  };

  const connectWallet = async () => {
    try {
      if (!window.ethereum)
        return setOpenError(true), setError("Install MetaMask");

      const accounts = await window.ethereum.request({
        method: "eth_requestAccounts",
      });

      setCurrentAccount(accounts[0]);
      connectingWithSmartContract();

      setSuccess("Successfully Connected to Wallet");
      setOpenSuccess(true);
    } catch (error) {
      setError("Error while connecting to Wallet");
      setOpenError(true);
    }
  };

  const mintCertificate = async (recipient, name, department,description, imageURL) => {
    try {

      const provider = new ethers.providers.Web3Provider(window.ethereum);
      const signer = provider.getSigner();
      const contractAddress = "0x2841ea1ed48a488b6E5c1c578154Ea2e2cB59fEE";
      const contract = new ethers.Contract(contractAddress, abi.abi, signer);
      const tx = await contract.mintCertificate(recipient, name, department,description, imageURL);
      await tx.wait();
      console.log(tx)
      alert('Certificate minted successfully!');
    } catch (error) {
      console.error(error);
      alert('Error minting certificate');
    }
  };


  const [certificates, setCertificates] = useState([]);
  const fetchCertificates = async (address) => {
    try {
      const provider = new ethers.providers.Web3Provider(window.ethereum);
      const signer = provider.getSigner();
      const contractAddress = "0x2841ea1ed48a488b6E5c1c578154Ea2e2cB59fEE";
      const contract = new ethers.Contract(contractAddress, abi.abi, signer);
      const certificates = await contract.fetchCertificateOf(address);
      setCertificates(certificates);
      console.log(certificates)
    } catch (error) {
      console.error(error);
      alert('Error fetching certificates');
    }
  };

  return (
    <GovContext.Provider value={{ ConnectToWallet, connectWallet, currentAccount, mintCertificate, fetchCertificates, certificates,imgURL,setImgURL }}>
      {children}
    </GovContext.Provider>
  );
}